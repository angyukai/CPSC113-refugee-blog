---
title: Drafting up our first MVP draft spec.
summary: |
  A simple and preliminary draft up of our app which primarily provides peer-to-peer services for Refugees in Europe.
news:
  - title: Got our *first* MVP draft up!
    kind: joy

  - title: We still have our Social to do 2 to do.
    kind: struggle


---

__Who is your customer or customers?:__
- Refugees in Europe

__What is their pain?:__
- In a foreign unknown land (refugees)
- Not knowing where to find affordable medical facilities, clothing, housing, food
- Language barrier (refugees)
- Not knowing where these refugees are, and how to help them (NGOs)

__What kind of software do you think will solve their pain?:__
- A map of the region which provides information of medic/clothing/food/housing. (refugees)

__How do you know these things?:__
- News reports 
- Accounts of people on the ground
- First hand experience

__How will you reach these customers and convert them into users of your app?:__
- We will reach the customers through NGOs already working on the ground
- In the long term we may make this a software service that the government requires migrants to be subscribed to.

__How do you imagine that you would support this venture? Is it non-profit? Is it for profit?:__
- For profit or an NGO. Generate revenues through partnering with stores that want to advertise clothing or service options to migrants. 
- Could also be paid for by organizations working on the ground in the long term

__What are the biggest risks? (Imagine you fast forward three months that your idea turns out to be bad and that it fails. What are the top five reasons you think it would have failed?):__
- Us not being completely in tune with the needs of migrants
- Organizations not being able to afford our solution
- Data sources do not turn out to be as dependable as we thought in determining hostility of regions, etc.
- Populations are hesitant to adopt the solution due to large input of effort required
- Government regulations prohibit parts of our service to prevent illegal migrant inflow

__Now that you know the biggest risks, how could you most swiftly allay your fears about them? Can you speak to particular users and ask them particular questions? Can you build a particular "low fidelity" version of your software? Can you do something crazy like "fake" your software using a mix of Google spreadsheets and SMS messages?:__
- Speaking to users will be key throughout this process. I think we could definitely prevent some of the mentioned problems through interviewing, but government regulation may be difficult to get around.
- It would be difficult to build something out of spreadsheets and SMS messages, but we could definitely fake the data collation. We could do all research beforehand and just create a pre determined map that could be used.


__You will be graded, in part, on the amount of "impact" you can achieve in this class. Here, impact is roughly the amount of value you are adding to people's lives times the number of people using your software at the end of the semester. How can you maximize that? What do you need to build?:__
- The best way we can maximize impact is by surveying and interviewing a large variety of migrants currently displaced in Europe.
- We need to build a system that can collect data that applies to migrants all across Europe. How this data is displayed will be important, but the actual collection of all relevant data will help us get as much information to migrants as possible.
 
__Describe to us how the software will function. Try to phrase this in some kind of user narrative:__
- As a user, I can log in. I can see XYZ, I can send a message to ABC", etc.:
- As a user any time I send a tweet with "#"nameOfApp the information will be analyzed by our system. I can log in to my account and there will ultimately be three different views. The first view is just a profile with a newsfeed and alerts based on data collected that is relevant to your interests, background, and current location. The second view is a map of Europe with a colored gradient varying from red to yellow to green, with green being the best zone for your specific demographic. You can zoom in on specific regions on this map. When you click on a region the third view will come up with extensive information on the region, akin to a Yelp page. We believe that these three views will be all that is necessary for our MVP to be relevant to its users.
 
__Describe to us the application architecture and technical choices needed to build that software. How is it divided between client and server? How do they communicate? How are you storing data? How will you manage, test, and deploy your code?:__
- On the server side, we will be storing our user profiles, regional information and information relayed by tweets. The data on the server side will be used to create our views that the users will see. There will be separate tables (databases?) for each kind of information. On the client side, our HTML/CSS view layer will respond to user inputs. Our aim, in the MVP, is to build a user-friendly interface. When refugees register on our app, their information will be sent to the server-side, where it will be stored. Any preferences that a user indicates in their profile, upon registering or even at any point later on, will also be stored on the server-side. 
